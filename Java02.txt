Todays Topic of discussion 
===========================
1.OOPS(Basic introduction)
2.Identifier  / Variables
    a.rules to write an Identifier
3.Reserved Words
4.Data types and its types

Yesterday Topic of discussion
-----------------------------
1.JShell
2.MAin method(public static void main(String args[]))
3.command line arguments execution using IDE and command prompt.

======================================
                OOPS
======================================

Its stand for Object Orientation Principles.
Object -> real time instance or an entity.
    eg:Car,Student,Empoloyee,

Every object in realtime will have 2 parts
    What it has 
    what it does


eg: Car 
        brandName :
        no.of weels :
        model:
        speed:


        move 
        accelerate
        brake

JAva Code 
-----------
class Car
{
    //HAS part of an Object is representated as a "Variables"
        String brandName ;
        int noOfWeels;
       
    //DOES part of an object is representated though "methods"
        public void move()
        {
            //logic of moving a vehicle
        }

        public vaid accelerate()
        {
            //logic of accelerating a vehicle
        }


}


#2.
    class Student 
    {
        //HAS-part (variables)
        String name;
        int id;
        float heigth;

        //DOES-part (methods) 
        public void study(){
            //logic of studying
        }

        public void play()
        {
            //logic for play
        }
    }

variables/Identifier
--------------------
it is a name in java program.
it can be a classname,methodname,variable name and label name
class Main{
    public static void main (String[] args){
        int x=10;
    }
}

Totally 4 identifiers

eg#2.

class Test {
    public static void main (String[] args){
        System.out.println("Sagar");

    }
}

Totally 7 identifiers

eg#3

class Demo {
    public static void main(String[] args){
        String name="sagar";
        String resuly = name.toUpperCase();
        System.out.println(resuly);
    }
}

Rules(compiler + jvm) for writing an identifiers
----------------------------------
int #_$ = 10;

Rule1 : The only allowed characters in java identifiers arguments
        a to z ,A to Z ,0 to 9 , _ (underscore),$
Rule2 : If we used in any other characters it would result in
        int ^* =10 ;(invalid)
Rule3 : identifiers are not allowed to start with digits

        int 4telids = 100;(invalid)

Rule4 : Java identifiers are case sensitive,meaning nubmer and Number is different.
class Demo {
    int num;
    int nUm;
    int Sam;
}
Rule5 : There is no length limit on java identifiers ,but still it is a good practice to keep the 
        length of the identifier not more than 15 characters.

int priorityOfThreadWithMinValue = 1;